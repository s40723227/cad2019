<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Week</h1>
<p>Week1                                                                                                                                                                             </p>
<p>中秋連假</p>
<p>Week2</p>
<p>建立個人倉儲cad2019及編輯</p>
<p>1.下載<a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing">2019Fall可攜套件.7z</a><span> (編譯  Solvespace 用)，完成後開啟。<br/> 2.登入個人github帳號，創建新的倉儲cad2019。<br/></span><span>3.進入要存放資料夾tmp。<br/></span><span>4.輸入</span><span>git clone  <span>https://github.com/s40723210/cad2019<span> 複製</span></span>個人倉儲至資料夾<span>。<br/>5.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。6.進入cmsimde，輸入python -m pip install flask_cors 更改模組。<br/>7.完成後，python wsgi.py 開始編輯倉儲(login密碼為admin)。<br/>8.編輯完成後，git status<span style="color: #ff0000;"> -&gt;</span> git add .<span style="color: #ff0000;"> -&gt;</span> git commit -m "XXX"<span style="color: #ff0000;"> -&gt;</span> git push。                                </span></span></p>
<p><span><span>Week2</span></span></p>
<p><span><span>根據<a href="http://mde.tw/cad2019/content/Solvespace.html">Solvespac</a></span></span><a href="http://mde.tw/cad2019/content/Solvespace.html">e</a>編譯引導，進行編譯後並啟動solvespcaesolvespcae.exeexe。</p>
<p>編譯步驟</p>
<p>1.  <span>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe。<br/>2.git version 查驗 git 版本(檢查版本是否為git 2.13 版本以上)。<br/>3.輸入git clone <span>--recurse-submodules 取得所有子模組資料。<br/>               git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace。<br/>4.編譯Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714<br/>                  line713:<span style="color: #ff0000;">#</span>list(APPEND ANGLE_DEFINITIONS<br/>                  line714:<span style="color: #ff0000;">#</span>"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/><span>endif()<br/>5.手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中 。 6.cd solvespace<span style="color: #ff0000;">-&gt;</span>cd extlib<span style="color: #ff0000;">-&gt;</span>cd libpng<span style="color: #ff0000;">-&gt;</span>mkdir build<span style="color: #ff0000;">-&gt;</span>cd build<span style="color: #ff0000;">-&gt;</span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<span style="color: #ff0000;">-&gt;</span><span>mingw32-make<span style="color: #ff0000;">-&gt;</span>rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib。<br/>7.回到solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 輸入cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<span style="color: #ff0000;">-&gt;<span style="color: #808080;">mingw32-make。</span></span></span></span></span></span></p>