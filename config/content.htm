<h1>Weeks</h1>
<p><span style="color: #0000ff;"><a href="https://s40723227.github.io/cad2019/content/Week2~Week5.html" style="color: #0000ff;">Week2~Week5</a></span></p>
<p><span style="color: #0000ff;"><a href="https://s40723227.github.io/cad2019/content/Week6~Week9.html" style="color: #0000ff;">Week6~Week9</a></span></p>
<p><span style="color: #0000ff;"><a href="https://s40723227.github.io/cad2019/content/Week10~Week14.html" style="color: #0000ff;">Week10~Week14</a></span></p>
<p><span style="color: #0000ff;"><a href="https://s40723227.github.io/cad2019/content/Week15%E3%80%9CWeek18.html" style="color: #0000ff;">Week15~Week18</a></span></p><h2>Week2~Week5</h2>
<p><strong><span style="color: #0000ff;"></span></strong></p>
<p><strong><span style="color: #0000ff;">Week2</span></strong></p>
<p><strong>建立個人倉儲cad2019及進行網站編譯</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kWgV0TXOp9c" width="560"></iframe></p>
<p>1.下載<span style="color: #0000ff;"><a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing" style="color: #0000ff;">2019Fall可攜套件.7z</a></span><span><span style="color: #0000ff;"> </span>(編譯  Solvespace 用)，完成後開啟。<br/> 2.登入個人github帳號，創建新的倉儲cad2019。<br/></span><span>3.進入要存放資料夾tmp。<br/></span><span>4.輸入</span><span>git clone  <span>https://github.com/s40723227/cad2019<span> 複製</span></span>個人倉儲至資料夾<span>。<br/>5.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。 <br/>6.將up_dir的所有項目複製到cad2019。<br/>7.完成後，進入cmsimde，輸入python -m pip install flask_cors 更改模組。<br/>8.完成後，python wsgi.py 開始編輯倉儲(login密碼為<span style="color: #ff0000;">admin</span>)。<br/>9.編輯完成後，git status<span style="color: #ff0000;"> -&gt;</span> git add .<span style="color: #ff0000;"> -&gt;</span> git commit -m "XXX"<span style="color: #ff0000;"> -&gt;</span> git push。                                </span></span></p>
<p><strong><span style="color: #0000ff;">Week3</span></strong></p>
<p><strong>根據<span style="color: #0000ff;"><a href="http://mde.tw/cad2019/content/Solvespace.html" style="color: #0000ff;">Solvespac</a></span><span style="color: #0000ff;"><a href="http://mde.tw/cad2019/content/Solvespace.html" style="color: #0000ff;">e</a></span>編譯引導，進行編譯後並啟動solvespcae</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DXreqVCgsOE" width="560"></iframe></p>
<p>編譯步驟</p>
<p>1.  <span>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe。<br/>2.git version 查驗 git 版本(檢查版本是否為git 2.13 版本以上)。<br/>3.輸入git clone <span>--recurse-submodules 取得所有子模組資料。<br/>               git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace。<br/>4.編譯Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714<br/>                  line713:<span style="color: #ff0000;">#</span>list(APPEND ANGLE_DEFINITIONS<br/>                  line714:<span style="color: #ff0000;">#</span>"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/><span>endif()<br/>5.手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中 。 <br/>6.cd solvespace<span style="color: #ff0000;">-&gt;</span>cd extlib<span style="color: #ff0000;">-&gt;</span>cd libpng<span style="color: #ff0000;">-&gt;</span>mkdir build<span style="color: #ff0000;">-&gt;</span>cd build<span style="color: #ff0000;">-&gt;</span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<span style="color: #ff0000;">-&gt;</span>mingw32-make<span color="#ff0000" style="color: #ff0000;">。<br/></span></span></span></span><span><span><span>7.重新命名libpng.dll.a為libpng_static.a 並複製到Y:\msys64\mingw64\lib目錄下。<br/>8.回到solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 輸入cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<span style="color: #ff0000;">-&gt;<span style="color: #808080;">mingw32-make。<br/>9.開啟solvespcae即完成程式編譯。</span></span></span></span></span></p>
<p><strong><span style="color: #0000ff;"> Week4</span></strong></p>
<p><strong><span style="color: #ff0000;"><span style="color: #808080;">進行網站更新及拍攝操作影片(上字幕.加浮水印)</span></span></strong></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;">1.使用的錄影軟體 <span style="color: #ff0000;">ShareX</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"><span style="color: #ff0000;"><img alt="" height="159" src="/images/shareX.jpg" width="318"/></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;">2.使用的剪輯軟體(上字幕.加浮水印) <span style="color: #ff0000;">Arctime</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"><img alt="" height="200" src="/images/arctime.jpg" width="200"/></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;">3.課程浮水印 <span style="color: #ff0000;">KMOL</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"><span style="color: #ff0000;"><img alt="" height="200" src="/images/未命名.jpg" width="310"/></span></span></span></span></span></span></span></p>
<p><strong><span style="color: #0000ff;">Week5</span></strong></p>
<p><span style="color: #808080;"><strong>學員互評及自評，solvespcae基本圖面繪製及組裝</strong></span></p>
<p><span style="color: #808080;"><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yu_RtZgb-F8" width="560"></iframe></strong></span></p>
<p><span style="color: #808080;">步驟一(支架):<br/>開啟圖檔，使用快捷鍵R畫出矩形-&gt;點選兩線段，使用快捷鍵Q使兩線段等長-&gt;使用快捷鍵D定義線段長度-&gt;使用快捷鍵shift+X擠出-&gt;點選two-siderider雙面擠出-&gt;使用快捷鍵D定義擠出長度-&gt;即完成</span></p>
<p><span style="color: #808080;">步驟二(桌腳):<br/>方法與步驟一相同，只有擠出長度不同。</span></p>
<p><span style="color: #808080;">步驟三(支架與桌腳組合):<br/>開啟圖檔，使用快捷鍵shift+I叫出支架及桌腳的圖檔-&gt;點選桌腳的座標系X與系統的座標系Y，再使用快捷鍵X使兩座標系同方向-&gt;點選兩接合點使用快捷鍵O使兩點接合-&gt;以相同方法完成整體支架。<br/></span></p>
<p><span style="color: #808080;">步驟四(桌面):<br/>方法與步驟一相同，只有矩形尺寸及擠出長度不同。</span></p>
<p><span style="color: #808080;">步驟五(整體支架與桌面組合):<br/>方法與步驟三相同。</span></p>
<p><span style="color: #808080;">備註:零件圖檔更改尺寸及顏色，組合圖也會更著改變。</span></p>
<p><span style="color: #808080;"></span></p>
<p><strong><span style="color: #808080;">成品圖</span></strong></p>
<p><img alt="" height="352" src="/images/solvespace_20190826_22e4011c_2019-10-11_15-55-57.png" width="533"/></p>
<h2>Week6~Week9</h2>
<p><strong><span style="color: #0000ff;">Week6</span></strong></p>
<p><strong><span style="color: #808080;">1.機械設計工程系-電腦輔助設計實習  W6 任務一參數化零組件繪製</span></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PLqjwFvD8Cg" width="560"></iframe></p>
<p><span style="color: #808080;">(1)繪製基本零件(車體底盤.輪子.軸.支撐軸):使用線條(S)及圓(R)畫出所需外型，再使用草圖展出(Shift+X)畫出展出或切除尺寸。<br/>(2)組裝零件:使用(X)讓零件法線方向相同後，使用(O)讓兩零件之兩點接合，即完成。</span></p>
<p><strong><span style="color: #808080;">成品圖</span></strong></p>
<p><strong><span style="color: #808080;"><img alt="" height="387" src="/images/車.png" width="500"/></span></strong></p>
<p><strong><span style="color: #808080;">2.<span>機械設計工程系-電腦輔助設計實習 W6 任務二網際 V-rep 模型控制</span></span></strong></p>
<p><span style="color: #808080;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NVT7xssxKok" width="560"></iframe></span></p>
<p><span style="color: #808080;">(1)下載</span><span style="color: #808080;"> </span><a href="https://drive.google.com/file/d/1cZFSsLEoGOBYojzKzFEf4YH2l--pbS-9/view?usp=sharing">V-rep 3.6.1 rev 4.7z</a><span style="color: #808080;"> 及<a href="https://github.com/mdecourse/mocad/files/3583773/web_vrep2.zip">web_vrep2.zip</a> (<a href="http://mde.tw/cad2019/downloads/web_vrep2.zip">local</a>)並解壓縮到隨身系統裡。<br/></span><span style="color: #808080;"><span><span>(2)打開vrep.exe並開啟web_vrep2裡的two_wheeler.ttt。<br/>(3)打開web_vrep2裡的app.py並執行，進入到http://127.0.0.1:5000/。<br/>(4)按開始之後，就可以控制車了。</span></span></span></p>
<p><strong><span style="color: #808080;">3.機械設計工程系-電腦輔助設計實習 W6 任務三新增啟動與停止按鈕</span></strong></p>
<p><strong><span style="color: #808080;"><a href="https://youtu.be/S8M79K-xn3Q" target="_blank"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/S8M79K-xn3Q" width="560"></iframe><br/></a></span></strong><span color="#808080" style="color: #808080;"><b></b></span></p>
<p><span color="#808080" style="color: #808080;">(1)開啟D:\web_vrep2\templates中的contrils.html，隨便複製一行當作修改內容，把up改成start及stop。<br/>(2)接著開啟D:\web_vrep2中的vrep_linefollower.py，新增啟動與停止的指令程式碼，完成後即可操作啟動與停止鈕。</span></p>
<p><strong><span color="#808080" style="color: #0000ff;">Week7</span></strong></p>
<p><strong><span class="js-issue-title">Solvespace 編譯與參數繪圖驗證</span></strong></p>
<p><strong><span class="js-issue-title">1.Solvespace 編譯-加入學號<br/></span></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/sfk7vl4tajw" width="560"></iframe></p>
<p>(1)到個人隨身系統的solvespace\build\scr\CMakeFiles\solvespace.dir底下，找到solvespace.cpp.obj檔案並刪除。<br/>(2)到solvespace\scr底下，找到solvespace.cpp並用編譯器開啟，利用ctrl+F搜尋GPL找到This is solvespace字串，並在後面加上is compiled by 學號。<br/>(3)到start_mdecourse，輸入cd solvespace\build-&gt;mingw32-make，等待完成後，開啟solvespace.exe案Help-&gt;About就完成了。</p>
<p><strong>編譯-加入學號圖</strong></p>
<p><img alt="" height="281" src="/images/認證.png" width="500"/></p>
<p><span class="js-issue-title"><strong>2.</strong><b>Solvespace</b><span style="font-weight: bold;"> 參數繪圖驗證</span></span></p>
<p><span class="js-issue-title"><span style="font-weight: bold;">(1)</span></span></p>
<p><span class="js-issue-title"><span style="font-weight: bold;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1NI-odKzHzY" width="560"></iframe></span></span><span class="js-issue-title"><span style="font-weight: bold;"></span></span></p>
<p><span class="js-issue-title"><span style="font-weight: bold;">成品圖</span></span></p>
<p><span class="js-issue-title"><span style="font-weight: bold;"><img alt="" height="420" src="/images/1.png" width="500"/></span></span></p>
<p><span class="js-issue-title"><span style="font-weight: bold;">(3)</span></span></p>
<p><span class="js-issue-title"><span style="font-weight: bold;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XlpxIWl07n8" width="560"></iframe></span></span></p>
<p><strong><span color="#808080">成品圖</span></strong></p>
<p><strong><span color="#808080"><img alt="" height="408" src="/images/2.png" width="500"/></span></strong></p>
<p><strong><span color="#808080">(4)</span></strong></p>
<p><strong><span color="#808080"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/In36vf8aV9U" width="560"></iframe></span></strong></p>
<p><strong><span color="#808080">成品圖</span></strong></p>
<p><strong><span color="#808080"><img alt="" height="422" src="/images/3.png" width="500"/></span></strong></p>
<p><strong><span color="#808080">(6)</span></strong></p>
<p><strong><span color="#808080"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Hjcmntg4Xgc" width="560"></iframe></span></strong></p>
<p><strong><span color="#808080">成品圖</span></strong></p>
<p><strong><span color="#808080"><img alt="" height="470" src="/images/6.png" width="500"/></span></strong></p>
<p><strong><span color="#808080">(7)</span></strong></p>
<p><strong><span color="#808080"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/zBQnOI-z5aQ" width="560"></iframe></span></strong></p>
<p><b>成品圖</b></p>
<p><b><img alt="" height="428" src="/images/7.png" width="500"/></b></p>
<p><b>(8)</b></p>
<p><b><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/D6GZC3-W1A0" width="560"></iframe></b><b></b></p>
<p><b>成品圖</b></p>
<p><b><img alt="" height="513" src="/images/8.png" width="500"/></b></p>
<p><b>(10)</b></p>
<p><b><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Dq-g3kUsJS8" width="560"></iframe></b></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="475" src="/images/10.png" width="500"/></strong></p>
<p><strong>(11)</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4euLn_dLRB0" width="560"></iframe></strong></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="439" src="/images/11.png" width="500"/></strong></p>
<p><strong>(12)</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/pJc-777mcOM" width="560"></iframe></strong></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="565" src="/images/12.png" width="500"/></strong></p>
<p><strong>(13)</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/65pVvlXfx9I" width="560"></iframe></strong></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="353" src="/images/13.png" width="500"/></strong></p>
<p><strong>(14)</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yS1OcDcU2Is" width="560"></iframe></strong></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="423" src="/images/14.png" width="500"/></strong></p>
<p><strong>(15)</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/BWiZPJNhgOs" width="560"></iframe></strong></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="435" src="/images/15.png" width="500"/></strong></p>
<p><strong>(16)</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Do9uJywnoAA" width="560"></iframe></strong></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="407" src="/images/16.png" width="500"/></strong></p>
<p><strong>(18)</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8eIS0bd4Guw" width="560"></iframe></strong></p>
<p><strong>成品圖</strong></p>
<p><strong><img alt="" height="596" src="/images/18.png" width="500"/></strong></p>
<p><strong><span color="#808080" style="color: #0000ff;">Week8</span></strong></p>
<p><strong>1.啟用CMSiMDE中的網誌系統</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Q9lbbAZ0LNU" width="560"></iframe></strong></p>
<p>(1)開啟<span style="color: #ff0000;">start_mdecourse.bat</span>，輸入<span style="color: #ff0000;">leo</span>。<br/>(2)將個人倉儲中的<span style="color: #ff0000;">config</span>內的<span style="color: #ff0000;">pelican.leo</span>用leo開啟。<br/>(3)到個人網站，將blog的網址複製到<span style="color: #ff0000;">@path . ./ <span style="color: #999999;">-&gt;</span> Pelican設定 <span style="color: #999999;">-&gt;</span> 遠端中SITEURL</span>。<br/>(4)再將底下的<span style="color: #ff0000;">DISQUS_SITENAME</span>改為自己的學號。<br/>(5)在<span style="color: #ff0000;">local_blog</span>點選右鍵-&gt;點選<span style="color: #ff0000;">goto script</span>，將指令複製起來後，存儲。<br/>(6)到個人倉儲下輸入指令。<br/>(7)完成。</p>
<p><strong>2.以ssh對Github連線</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/QV5i64G76DE" width="560"></iframe></strong></p>
<p><span style="color: #808080;">(1)到Y槽(Data)中的portablegit將sh_for_solvespace檔案複製並修改成sh.exe。</span><br/><span style="color: #808080;">(2)開啟start_mdecourse.bat並輸入sh及ssh-keygen -t rsa -b 4096 -C "使用者學號"產生key，打上key的產生區域。</span><br/><span style="color: #808080;">(3)下載<span style="color: #0000ff;"><a href="https://drive.google.com/file/d/1ISq1TJuaZyYZnfU33l-b7ifzmO3ejlEV/view?usp=sharing" rel="nofollow" style="color: #0000ff;">putty.7z SSH 連線工具組</a></span>，利用其中的 puttygen.exe 將上述建立的 Openssh keys 轉為 putty 可以辨識的格式。</span><br/>(4)修改啟動的 start.bat 加入下列設定:<br/>       set GIT_HOME=%Disk%:\portablegit\bin\<br/>       set GIT_SSH=%Disk%:\putty\plink.exe<br/> 修改完成後,重新啟動。<br/> (5)將要使用 ssh 連線的倉儲 .git 中的 config 檔案中的 url 設定改為 ssh 連線格式:url = git@github.com:倉儲名稱/cad2019.git。<br/> (6)開啟 putty.exe 建立一個 session 名稱為 github.com, 其中指定 Connection -&gt; Proxy 與 Connection -&gt; SSH -&gt; Auth。<br/> (7)將下列字串加入編輯器並存儲到y:\home\.ssh\config:<br/> Host github.com<br/>     User git<br/>     Port 22<br/>     Hostname github.com<br/> <br/>     TCPKeepAlive yes<br/>     IdentitiesOnly yes<br/> (8)將所建立的OpenSSH格式的public key內容,送到Github帳號SSH settings中。<br/>(9)完成。</p>
<p><span style="color: #808080;"></span><strong>3.導入Webots</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/-V4kJmapfIo" width="560"></iframe></strong></p>
<p>(1)到<a href="http://mde.tw/cad2019/content/Webots.html">http://mde.tw/cad2019/content/Webots.html</a>中下載<a href="https://drive.google.com/file/d/1MolDH7kKJt_IIBTrKalsMfNWMrqqTWdt/view?usp=sharing">Webots_2019b_rev1.7z</a><span><span> 解壓縮到Y槽(Data)。<br/>(2)將隨身系統中的start_mdecourse.bat複製一個並改名start_mdecourse_webots.bat。<br/>(3)打開編譯器，將start_mdecourse_webots.bat設定執行路徑及啟動指令。<br/>(4)完成後，即可開啟Webots。</span></span></p>
<p><strong><span color="#808080" style="color: #0000ff;">Week9</span></strong></p>
<p><strong><span color="#808080">期中報告</span></strong></p>
<p><strong><span color="#808080"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/B76TzMgWv-4" width="560"></iframe></span></strong></p><h2>Week10~Week14</h2>
<p><a href="https://s40723227.github.io/cad2019/content/Week10.html">Week10</a><br/><br/><a href="https://s40723227.github.io/cad2019/content/Week12.html">Week12</a><br/><br/><a href="https://s40723227.github.io/cad2019/content/Week13.html">Week13<br/></a><br/><a href="https://s40723227.github.io/cad2019/content/Week14.html">Week14</a></p><h3>Week10</h3>
<p><big><big><strong>正向<span>pull request與反向pull request之差異</span></strong></big></big></p>
<p>正向  pull request:<br/>     指無權限之組員創建N<span>ew pull request後，將</span>更新資料推送到組別倉儲，再經由有權限組長或組員確認資料無誤後，同意合併。</p>
<p>反向 pull request:<br/>     指管理者給於組員權限，使組員擁有合併的權力，但常因組員版本不同，推送易發生衝突。</p>
<p><big><big><strong>Fork倉儲</strong></big></big></p>
<p>1.登入個人github帳號，並搜尋自己組別的倉儲。<br/>2.點選Fork後，再點選自己的github帳號。<br/>3.使用指令<span>git clone --recurse-submodules將分組倉組clone下來。<br/>4.更新資料後，git add . -&gt;git commit -m"xxx" -&gt;git push，創建New pull request。<br/>5.等待組長同意後，確認合併即可。</span></p>
<p><big><big><strong></strong></big></big></p>
<p><big><big><strong>繪圖軟體介紹<br/></strong></big></big></p>
<p><b>Solvespace<br/></b><a href="https://s40723212.github.io/cad2019bg1/content/Solvespace%E5%8A%9F%E8%83%BD%E8%A1%A8%E8%AA%AA%E6%98%8E.html">Solvespace功能表說明<br/></a><a href="https://s40723212.github.io/cad2019bg1/content/%E5%AF%A6%E4%BD%9C%E5%BD%B1%E7%89%87.html">Solvespace實作影片</a></p>
<p><img alt="" height="225" src="https://s40723212.github.io/cad2019bg1/images/%E4%B8%8B%E8%BC%89.png" width="225"/></p>
<p><strong>Solidworks<br/></strong><a href="https://s40723212.github.io/cad2019bg1/content/Solidworks%E9%96%8B%E7%99%BC%E7%B7%A3%E8%B5%B7.html">Solidworks開發緣起<br/></a><a href="https://s40723212.github.io/cad2019bg1/content/Solidworks%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%9D%E8%88%87%E6%B5%81%E7%A8%8B%E8%A8%AD%E5%AE%9A.html">Solidworks套件安裝與流程設定</a></p>
<p><img alt="" height="225" src="https://s40723212.github.io/cad2019bg1/images/Solidworks.jpg" width="225"/></p>
<p><strong>NX<br/></strong><a href="https://s40723212.github.io/cad2019bg1/content/NX%E9%96%8B%E7%99%BC%E8%B5%B7%E6%BA%90.html">NX開發起源<br/></a><a href="https://s40723212.github.io/cad2019bg1/content/NX%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%9D%E8%88%87%E8%A8%AD%E5%AE%9A%E6%B5%81%E7%A8%8B.html">NX套件安裝與設定流程</a></p>
<p><img alt="" height="225" src="https://s40723212.github.io/cad2019bg1/images/NX.jpg" width="225"/></p>
<p><strong>Inventor<br/></strong><a href="https://s40723212.github.io/cad2019bg1/content/Inventor%E9%96%8B%E7%99%BC%E8%B5%B7%E6%BA%90.html">Inventor開發起源<br/></a><a href="https://s40723212.github.io/cad2019bg1/content/Inventor%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%9D%E8%88%87%E8%A8%AD%E5%AE%9A%E6%B5%81%E7%A8%8B.html">Inventor套件安裝與設定流程</a></p>
<p><img alt="" height="225" src="https://s40723212.github.io/cad2019bg1/images/Inventor.png" width="225"/></p>
<p><strong>Creo (Pro/E)<br/></strong><a href="https://s40723212.github.io/cad2019bg1/content/Creo%20(ProE)%E9%96%8B%E7%99%BC%E8%B5%B7%E6%BA%90.html">Creo (ProE)開發起源<br/></a><a href="https://s40723212.github.io/cad2019bg1/content/Creo%20(ProE)%E5%A5%97%E4%BB%B6%E5%AE%89%E8%A3%9D%E8%88%87%E8%A8%AD%E5%AE%9A%E6%B5%81%E7%A8%8B.html">Creo (ProE)套件安裝與設定流程</a></p>
<p><img alt="" height="195" src="https://s40723212.github.io/cad2019bg1/images/ProE.jpg" width="225"/></p>
<p><strong><a href="https://s40723212.github.io/cad2019bg1/content/%E5%90%84%E5%A5%97%E7%B9%AA%E5%9C%96%E8%BB%9F%E9%AB%94%E4%B9%8B%E5%B7%AE%E7%95%B0%E5%8F%8A%E7%89%B9%E9%BB%9E%E5%88%86%E6%9E%90.html">各套繪圖軟體之差異及特點分析</a></strong></p>
<h3>Week12</h3>
<p><big><big><strong>Batch Command</strong></big></big></p>
<p>使用者在維護網站時，需開啟動態與近態頁面，必須<span>以 python 執行位於 cmsimde 子目錄中的 wsgi.py，以及開啟位於倉儲根目錄中的 http-server.py，為了方便，所以在 y:\ 目錄建立下列兩個命令批次檔案:<br/></span></p>
<p>cad.bat - 啟動 wsgi.py 並且在瀏覽器開啟 https 9443 動態網頁</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_119954">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">@echo off</code></div>
<div class="line number2 index1 alt1"><code class="js plain">y:</code></div>
<div class="line number3 index2 alt2"><code class="js plain">cd tmp\cad2019\cmsimde</code></div>
<div class="line number4 index3 alt1"><code class="js plain">start python wsgi.py | start chrome https:</code><code class="js comments">//localhost:9443</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>其中的 | 是同時執行 wsgi.py 的啟動以及瀏覽器網頁的開啟</p>
<p>而 cadh.bat - 啟動 http-server 並且在瀏覽氣開啟 https 8444 靜態網頁</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_482620">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">@echo off</code></div>
<div class="line number2 index1 alt1"><code class="js plain">y:</code></div>
<div class="line number3 index2 alt2"><code class="js plain">cd tmp\cad2019\</code></div>
<div class="line number4 index3 alt1"><code class="js plain">start python http-server.py | start chrome https:</code><code class="js comments">//localhost:8444</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>至於近端倉儲維護告一段落後, 啟動 gitextensions 開啟 cad2019 倉儲時, 使用:</p>
<p>cadg.bat</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_942792">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">@echo off</code></div>
<div class="line number2 index1 alt1"><code class="js plain">y:</code></div>
<div class="line number3 index2 alt2"><code class="js plain">Y:\cad\201906_fall\data\GitExtensions\gitextensions.exe  browse y:\tmp\cad2019\</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><span>操作影片:</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1vOdn-taNo0" width="560"></iframe></span></p>
<p>1.到課程網頁的Tasks2中的Batch Command，並打開編輯器。<br/>2.將各程式碼複製到編輯器，並確認自己的路徑是否相同。<br/>3.存儲到Y槽，即可在start_mdecourse.bat打上<span>cad.bat  .  cadh.bat .  cadg.bat 做測試。<br/>4.完成。</span></p>
<p><strong><big><big>NX12使用手冊重點整理</big></big></strong></p>
<p><big><big><strong>第三章 2D草圖<br/></strong></big></big>  在本章中，將學習如何在NX12中創建和編輯草圖，可以在<span style="color: #ff0000;">建模(Plane in Modeling)</span>應用程序中的平線上直接創建草圖，在大多數情況下，建模是從2D草圖開始的，然後拉伸.旋轉或掃掠草圖以創建實體，透過繪製草圖可以輕鬆地繪製許多其他很難建模的複雜形狀。<br/>  在本章中，將看到一些草圖繪製概念和對某些零件進行草圖繪製和建模。</p>
<p><big><strong>3.1 概述<br/></strong>  </big>  NX12草圖是一組被命名的曲線，這些曲線連接在一串字符串中，掃描後形成實體，草圖表示該零件的外邊界，曲線在草圖繪製中的平面上創建。<br/>  首先，這些曲線的繪製並沒有任何確切的尺寸，然後應用尺寸及幾何的約束來完全約束草圖，繪製完成後，可以使用多種方法來生成3D零件：<br/>• 旋轉草圖<br/><img alt="" height="134" src="/images/1.png" width="221"/><br/>• 拉伸草圖</p>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="146" src="https://s40723247.github.io/cad2019/images/%E6%93%B7%E5%8F%96.PNG" width="217"/></span></pre>
<p><br/>• 沿參考線掃掠草圖</p>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><span><img alt="" height="132" src="https://s40723247.github.io/cad2019/images/3.PNG" width="231"/><br/>  從草圖創建的特徵與之關聯， 也就是說如果草圖發生變化，特徵也會發生變化。<br/>  使用草圖創建零件的優點是：<br/>•用於創建輪廓輪廓的曲線具有優良機動性，可用於建模特殊的形狀。<br/>•曲線是參數化的，因此具有關聯性，可以輕鬆更改或刪除它們。<br/>•如果更改了繪製草圖的平面，則草圖也會相應改變。<br/>•當您想要控制特徵的輪廓時，草圖非常實用，尤其是將來需要更改時，草圖可以<br/>快速.輕鬆地進行編輯。<br/><br/><big><strong>3.2 草圖環境<br/></strong></big>  在NX 12中，可以使用兩種方法創建草圖。<br/>➢(1)選擇菜單(Choose <span style="color: #ff0000;">Menu</span>)→插入(<span style="color: #ff0000;">Insert</span>)→草圖(<span style="color: #ff0000;">Sketch</span>)。<br/></span></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="287" src="https://s40723247.github.io/cad2019/images/4.PNG" width="306"/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><span><br/>➢(2)在主工具欄中選擇草圖(Choose <span style="color: #ff0000;">Sketch</span> in <span style="color: #ff0000;">Home</span> toolbar)。<br/> 無論哪種情況，都會彈出一個功能框，要求定義草圖平面，螢幕將顯示草圖選項，<br/>可以選擇<span style="color: #ff0000;">草圖平面</span>和<span style="color: #ff0000;">草圖方向</span>.<span style="color: #ff0000;">草圖平面類型</span>。<br/> 使用<span style="color: #ff0000;">創建草圖</span>功能框創建草圖時，可以通過點擊所示的座標系來選擇創建草圖的平<br/>面在此座標系上，即顯示你選擇的平面，默認平面為<span style="color: #ff0000;">XC-YC</span>，然而你可以選擇在另一<br/>平面上繪製草圖。<br/>➢ 選擇XC-YC平面，然後點擊<span style="color: #ff0000;">確定</span>(Choose the <span style="color: #ff0000;">XC-YC</span> plane and click <span style="color: #ff0000;">OK</span>)。<br/></span></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="144" src="https://s40723247.github.io/cad2019/images/5.PNG" width="141"/></span><br/>  將顯示草圖平面，並且標記X-Y方向，主螢幕將更改為草圖環境(<span style="color: #ff0000;">Sketching Environment</span>)，<br/>XY平面顯示為繪圖的默認平面，這是基本的草圖窗口。<br/>  NX 12中還有一個特殊的草圖任務環境，它在主窗口中顯示所有素描工具，用於進入草圖任務環境。<br/>➢ 直接在草圖工具欄區域中點擊更多選項<br/>(Click the <span style="color: #ff0000;">More</span> option in the direct sketch tool bar area)<br/>➢ 點擊在草圖任務環境中打開，如下所示<br/>(Click on <span style="color: #ff0000;">Open in Sketch Task Environment</span> as shown below):</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW" tabindex="0"><img alt="" height="161" src="https://s40723247.github.io/cad2019/images/6.PNG" width="627"/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr">在完成標誌旁有三個實用的選項:<br/><img alt="" height="96" src="/images/finsh.png" width="172"/><br/>(1)可以在框中更改草圖的名稱<br/>(2)面向草圖(<span style="color: #ff0000;">Orient to Sketch</span>)，用於將視圖定向到草圖的平面。<br/>(3)如果在繪圖過程中旋轉了模型文件，點擊此圖標在與螢幕平行的平面上查看草圖。<br/>將草圖重新附加(<span style="color: #ff0000;">Reattach attaches</span>)到其他平面，基準平面或路徑或更改素描方向。<br/>允許將草圖重新附加到所需的平面，而無需重新創建所有曲線，尺寸和約束。<br/><br/><strong><big>3.3 草圖曲線工具欄<br/></big></strong>  該工具欄包含用於創建常用類型的曲線和樣條曲線.編輯.延伸.修剪.圓角等的圖標，<br/>每種類型的曲線都有不同的選擇方法和創建方法。</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="238" src="https://s40723247.github.io/cad2019/images/7.PNG" width="224"/><span><br/></span></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><br/> 最常用的選項:<br/><br/></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><span><img alt="" height="25" src="https://s40723247.github.io/cad2019/images/8.PNG" width="32"/></span></span><span lang="zh-TW" tabindex="0"><span>輪廓(Profile)<br/>  此選項會根據您在彈出工具欄中選擇的圖標創建直線和圓弧。 <br/>可以通過使用座標系或通過輸入線的長度和角度來點選此點，如圖所示。<br/></span></span><img alt="" height="117" src="https://s40723247.github.io/cad2019/images/9.PNG" width="611"/></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="39" src="https://s40723247.github.io/cad2019/images/10.PNG" width="31"/></span><span lang="zh-TW" tabindex="0"><span>直線(Line)<br/>  此選項將選擇性地創建直線。<br/></span></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="31" src="https://s40723247.github.io/cad2019/images/11.PNG" width="25"/>弧(Arc)</span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><span>  此選項有兩種方法可以創建弧。 <br/>(1)三點畫弧，如圖所示。<br/></span></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW" tabindex="0"><img alt="" height="107" src="https://s40723247.github.io/cad2019/images/12.PNG" width="601"/></span><span lang="zh-TW" tabindex="0"><span><br/>(2)創建具有中心點.半徑和後掠角的圓弧或者創建具有起點和終點的圓弧，如圖所示。<br/></span></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><span><img alt="" height="106" src="https://s40723247.github.io/cad2019/images/13.PNG" width="426"/><br/><br/></span></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><span><img alt="" height="29" src="https://s40723247.github.io/cad2019/images/14.PNG" width="30"/></span></span>圓(Circle)<br/>  創建圓類似於創建圓弧，不同之處在於，圓是封閉的。</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><br/><span lang="zh-TW" tabindex="0"><img alt="" height="35" src="https://s40723247.github.io/cad2019/images/15.PNG" width="38"/>快速修剪(Quick Trim)<br/>將從曲線的交點修剪延伸的曲線，如果每個實體與另一個實體相交，<br/>則此選項通過拆分每個實體來讀取它們，並擦除所選部分。<br/><br/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="35" src="https://s40723247.github.io/cad2019/images/16.PNG" width="29"/></span>Studio樣條線(Studio Spline)</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0">  創建具有極點或具有曲線度的點之基本樣條曲線（B樣條曲線和Bezier）。<br/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW" tabindex="0"><img alt="" height="305" src="https://s40723247.github.io/cad2019/images/17.PNG" width="423"/><br/><br/><br/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong><span lang="zh-TW" tabindex="0"><big>3.4 約束工具欄</big><br/>  </span></strong><span lang="zh-TW" tabindex="0">有曲線都是通過點選之點創建的，舉例來說，兩點決定一直線。<br/>  </span><span lang="zh-TW" tabindex="0">在2D環境中，任何點都有兩個自由度，一個沿X軸，另一個沿Y軸。<br/>  </span>所創建曲線的類型取決於點的數量，因此，曲線實體的自由度數是其包含的點的數量之兩倍，<br/><span lang="zh-TW" tabindex="0">這些自由度可以通過使用固定實體創建約束來消除。<br/>  實際上，建議你通過直接或間接將實體與固定實體相關聯來刪除所有這些自由度（使草圖完全受約束），<br/>可以通過提供尺寸或幾何屬性（如平行度，垂直度等）來完成。</span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"> </span><span lang="zh-TW" tabindex="0"> </span><span lang="zh-TW" tabindex="0">在NX 12中，智能約束是自動應用的，即NX12會解釋自動尺寸或幾何約束。<br/>可以通過點擊連續自動標註( Continuous Auto </span><span lang="zh-TW" tabindex="0">Dimensioning)來關閉此選項，如圖所示。<br/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="242" src="https://s40723247.github.io/cad2019/images/18.PNG" width="631"/></span><br/><br/></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="39" src="https://s40723247.github.io/cad2019/images/19.PNG" width="44"/></span>尺寸約束(Dimensional Constraints)<br/>  透過給尺寸賦予固定實體（例如軸，平面，坐標系或模型中創建的任何現有實體幾何形狀）的尺寸，可以消除自由度。 <br/>這些尺寸可以是線性.徑向.角度等。您可以在繪圖過程中隨時通過雙擊尺寸來編輯尺寸值。</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="316" src="https://s40723247.github.io/cad2019/images/20.PNG" width="633"/></span><br/><br/></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="29" src="https://s40723247.github.io/cad2019/images/21.PNG" width="32"/></span>幾何約束(Geometric Constraints)<br/>  除了尺寸約束之外，還可以提供一些幾何約束以消除自由度。包括平行.垂直.共線.同心.水平.垂直.等長...等。<br/>  該軟件具有為所選實體找到可能約束的集合的能力。 例如，在下圖中的線上施加一個約束，<br/>使其平行於矩形的左側（該線最初與矩形成一定角度）。</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><img alt="" height="328" src="https://s40723247.github.io/cad2019/images/22.PNG" width="640"/></span><br/><br/></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><br/><img alt="" height="38" src="https://s40723247.github.io/cad2019/images/23.PNG" width="43"/></span>顯示草圖約束(Display Sketch Constraints)<br/>  點擊此圖標將以白色顯示與該特定草圖中的實體相關的所有選項。<br/><br/><img alt="" height="36" src="https://s40723247.github.io/cad2019/images/24.PNG" width="36"/>顯示/刪除約束(Show/Remove Constraints)<br/>  該窗口列出了與所選任何實體相關的所有約束和約束類型，可以刪除列出的任何約束或更改約束的順序，<br/>不受約束的自由度數將顯示在狀態行中，這些都應該通過應用約束來遵循嚴格的模型來刪除。<br/><br/><strong><big>3.5 範例<br/></big></strong> <strong> 3.5.1 Arbor Press Base<br/></strong></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong>  <img alt="" height="292" src="/images/121212213231.png" width="244"/></strong></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong><br/>操作影片:<br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DmDeEAPZzf0" width="560"></iframe><br/><br/></strong> 1.點擊草圖(<span style="color: #ff0000;">Sketch</span>)按鈕，然後點擊確定(<span style="color: #ff0000;">OK</span>)。<br/> 2.選擇菜單(<span style="color: #ff0000;">Menu</span>)→插入(<span style="color: #ff0000;">Insert</span>)→草圖曲線(<span style="color: #ff0000;">Sketch Curve</span>)→點擊輪廓(<span style="color: #ff0000;">Profile</span>)或點擊輪廓(<span style="color: #ff0000;">Profile</span>)組中的<br/> 直接繪製(<span style="color: #ff0000;">Direct Sketch</span>)（記住要關閉連續自動尺寸標註(<span style="color: #ff0000;">Continuous Auto Dimensioning</span>)）。<br/> 3.繪製上圖之圖形，點擊輪廓(<span style="color: #ff0000;">Profile</span>)中的線(<span style="color: #ff0000;">Line</span>)及弧(<span style="color: #ff0000;">Arc</span>)來繪製直線及圓弧。<br/> <img alt="" height="108" src="/images/12321231321.png" width="249"/><br/> 4.選擇插入(<span style="color: #ff0000;">Insert</span>)→幾何約束(<span style="color: #ff0000;">Geometric Constraints</span>)或點擊在側面工具欄中的約束(<span style="color: #ff0000;">Constraints</span>)<img alt="" height="26" src="/images/a.png" width="31"/>。<br/> 5.選擇曲線上的點(<span style="color: #ff0000;">Point on Curve</span>)<img alt="" height="31" src="/images/b.png" width="27"/>進行約束。<br/> 6.選擇Y軸，並選擇圓弧的中心;使用相同方法，使X軸也對準中心。<br/> 7.選擇兩條斜線並使兩線等長(<span style="color: #ff0000;">Equal Length</span>)，如圖所示。<br/><strong> <img alt="" height="213" src="/images/c.png" width="375"/><br/></strong> 8.選擇底部的兩條水平線，使兩線共線(<span style="color: #ff0000;">Collinear</span>)並點擊等長(<span style="color: #ff0000;">Equal Length</span>)，如圖所示。<br/><strong> <img alt="" height="101" src="/images/d.png" width="512"/><br/></strong> 9.如果沒有找到附近的兩個藍色圓圈（切線約束），如下圖所示，則選擇圓弧和連接到其端點的兩條垂直線之一，<br/> 點選切線(<span style="color: #ff0000;">Tangent</span>)<img alt="" height="29" src="/images/f.png" width="33"/>。<br/><strong> <img alt="" height="80" src="/images/e.png" width="151"/><br/> </strong>如果圓弧和直線已經相切，則圖標將顯示為灰色，則點擊編輯(<span style="color: #ff0000;">Edit</span>)→選項(<span style="color: #ff0000;">Selection</span>)→取消全選(<span style="color: #ff0000;">Deselect All</span>)，<br/> 對圓弧和另一條垂直線重複相同的步驟。<br/> 10.使用等長(<span style="color: #ff0000;">Equal Length</span>)的方法，使圖形對稱。<br/> 注意:在加入約束後，草圖可能會失去幾何連續性，圖如所示，在此種狀況下，點選兩線的確切終點，<br/> 並點擊重合約束。(在尺寸與幾何約束有衝突，會以黃點顯示)。<br/> <img alt="" height="113" src="/images/g.png" width="249"/><br/> 11.在約束(<span style="color: #ff0000;">Constraints</span>)工具欄中選擇快速尺寸(<span style="color: #ff0000;">Rapid Dimension</span>)<span lang="zh-TW" tabindex="0"><img alt="" height="39" src="https://s40723247.github.io/cad2019/images/19.PNG" width="44"/></span>。<br/> 12.約束各線段的尺寸(依大到小尺寸開始約束)，如圖所示。<br/> <img alt="" height="422" src="/images/j.png" width="360"/></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr">13.完成後，點擊螢幕左上角或右下角的完成標誌(<span style="color: #ff0000;">Finish Flag</span>)<img alt="" height="28" src="/images/k.png" width="33"/>。<br/> 14.點擊草圖，並選擇拉伸(<span style="color: #ff0000;">Extrud</span>)。<br/>    <img alt="" height="212" src="/images/l.png" width="266"/><br/> 15.在Z方向上將該草圖拉伸60mm，如圖所示。   <br/><img alt="" height="272" src="/images/m.png" width="624"/><br/> 16.完成。<br/><strong><br/> 3.5.2 Impeller Lower Casing<br/>  <img alt="" height="228" src="/images/NX2.png" width="500"/><br/>操作影片:<br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kSCP3OrmWVw" width="560"></iframe><br/><br/></strong></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr">  1.點擊菜單(<span style="color: #ff0000;">Menu</span>)→插入(<span style="color: #ff0000;">Insert</span>)→點擊草圖任務環境(<span style="color: #ff0000;">Sketch In Task Environment</span>)或<br/>點選功能區的草圖任務環境(<span style="color: #ff0000;">Sketch In Task Environment</span>)中的<img alt="" height="21" src="/images/n.png" width="27"/>。<br/>  2.將繪圖平面設置為XC-YC平面。<br/>  3.繪製下圖曲線。<br/><img alt="" height="204" src="/images/o.png" width="593"/><br/>  4.透過點擊直接繪製(<span style="color: #ff0000;">Direct Sketch</span>)中的加號，在原點（0，0，0）上創建一個點。<br/>  5.點擊幾何約束(<span style="color: #ff0000;">Geometric Constraints</span>)<img caption="false" height="26" src="/images/a.png" width="31"/>。<br/>  6.選擇原點處的點，並點擊固定約束(<span style="color: #ff0000;">Fixed</span>)<img alt="" height="30" src="/images/q.png" width="27"/>（如果看不到此圖標，則點設置(<span style="color: #ff0000;">Settings</span>)並按下圖所示進行檢查）。<br/>    <img alt="" height="527" src="/images/r.png" width="223"/><br/>  7.使所有曲線和直線之節點相切(<span style="color: #ff0000;">Tangent</span>)。<br/>  8.約束尺寸，如下圖。<br/>    <img alt="" height="257" src="/images/s.png" width="376"/><br/>  9.選擇所有尺寸，並點擊右鍵隱藏所有尺寸。<br/>  10.選擇菜單(<span style="color: #ff0000;">Menu</span>)→編輯(<span style="color: #ff0000;">Edit</span>)→移動物件(<span style="color: #ff0000;">Move Object</span>)或從功能區欄中選擇移動曲線(<span style="color: #ff0000;">Move Curve</span>)。<br/>  11.選擇所有曲線，在選擇物件(<span style="color: #ff0000;">Select Object</span>)中可以看到4個物件，將其中的動作(<span style="color: #ff0000;">Motion</span>)改為距離(<span style="color: #ff0000;">Distance</span>)。<br/>  12.在指定向量(<span style="color: #ff0000;">Specify Vector</span>)中選擇YC方向，並在距離(<span style="color: #ff0000;">Distance</span>)中輸入0.5英吋。<br/>     <img alt="" height="399" src="/images/t.png" width="221"/><br/>  13.在功能框中，點擊複製原物件(<span style="color: #ff0000;">Copy Original</span>)，並點選確定(<span style="color: #ff0000;">OK</span>)。<br/>  14.使用基本曲線將兩端點連接起來以完成草圖。<br/><img alt="" height="158" src="/images/w.png" width="542"/><br/>  15.選擇編輯(<span style="color: #ff0000;">Edit</span>)→移動物件(<span style="color: #ff0000;">Move Object</span>)或從功能區欄中選擇移動曲線(<span style="color: #ff0000;">Move Curve</span>)。<br/>  16.選擇下方曲線，並向Y軸方向移動-1.5英吋。<br/>  17.使用直線將此曲線與內部曲線連接，如圖所示。<br/>     <img alt="" height="161" src="/images/x.png" width="444"/><br/>  18.選擇編輯(<span style="color: #ff0000;">Edit</span>)→移動物件(<span style="color: #ff0000;">Move Object</span>)。<br/>  19.選擇外線，如下圖所示。</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr">20.將此線向X軸移動-0.5英吋。<br/>     <img alt="" height="314" src="/images/y.png" width="393"/><br/>   21.使用直線將兩條線連接起來，如圖所示。<br/>      <img alt="" height="201" src="/images/z.png" width="117"/><br/>  22.點擊完成標誌(<span style="color: #ff0000;">Finish Flag</span>)<img alt="" height="28" src="/images/k.png" width="33"/>，即完成。<br/><br/> <strong>3.5.3 Impeller<br/>  <img alt="" height="277" src="/images/NX3.png" width="500"/><br/>操作影片:<br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/sVxB56U9W4o" width="560"></iframe><br/><br/> </strong>1.點擊草圖(<span style="color: #ff0000;">Sketch</span>)，並將草繪平面設置為XC-YC平面，然後點擊確定(<span style="color: #ff0000;">OK</span>)。<br/> 2.點擊菜單(<span style="color: #ff0000;">Menu</span>)→插入(<span style="color: #ff0000;">Insert</span>)→基準/點(<span style="color: #ff0000;">Datum/Point</span>)<br/> →點(<span style="color: #ff0000;">Point</span>)或在點(<span style="color: #ff0000;">Point</span>)的功能區欄中點擊直接繪製(<span style="color: #ff0000;">Direct Sketch</span>)。<br/> <img alt="" height="109" src="/images/a1.png" width="217"/><br/> 3.創建兩個點，一個在原點(0，0，0).一個在(11.75，6，0)。<br/> 4.點擊側邊工具欄上的弧形(<span style="color: #ff0000;">Arc</span>)圖標，並點擊彈出式工具欄中的中心點及端點畫弧(<span style="color: #ff0000;">Arc by Center and Endpoints</span>)<img alt="" height="33" src="/images/B1.png" width="32"/>。<br/> 5.點擊原點上的點，並創建一個半徑為1.5的圓弧，如圖所示。<br/> <img alt="" height="146" src="/images/d1.png" width="212"/><br/> 6.點擊（11.75，6，0）處的點，並創建半徑為0.5的圓弧。<br/> 7.點擊彈出工具欄中的3點畫弧(<span style="color: #ff0000;">Arc by 3 Points</span>)<img alt="" height="34" src="/images/C1.png" width="34"/>。<br/> 8.選剛剛創建的兩個弧的頂部端點，並點擊兩者之間的某個位置以創建另一個連接的弧，對底部端點執行相同操作。</pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr">    <img alt="" height="125" src="/images/f1.png" width="213"/></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><br/> 9.點擊側面工具欄中的約束(<span style="color: #ff0000;">Constraints</span>)，並確認所有弧在其端點處相切(<span style="color: #ff0000;">Tangent</span>)。<br/> 10.點擊原點上的點，並點擊固定約束(<span style="color: #ff0000;">Fixed</span>)<img alt="" height="30" src="/images/q.png" width="27"/>。<br/> 11.點擊快速尺寸(<span style="color: #ff0000;">Rapid Dimension</span>)<span lang="zh-TW" tabindex="0"><img alt="" height="39" src="https://s40723247.github.io/cad2019/images/19.PNG" width="44"/></span>，並約束每個圓弧的半徑(<span style="color: #ff0000;">Radius</span>)尺寸，<br/>    以使末端的兩個圓弧分別為1.5和0.5英寸，兩個中間的圓弧分別為18和15英寸，如圖所示。<br/>    <img alt="" height="224" src="/images/g1.png" width="294"/><br/>  12.點擊完成標誌(<span style="color: #ff0000;">Finish Flag</span>)<img alt="" height="28" src="/images/k.png" width="33"/>，即完成。<br/><br/><strong><big>3.6 練習</big><big><br/></big></strong><strong> 3.6.1 圓形底座(Circular Base)  <br/></strong></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><span lang="zh-TW" tabindex="0"><span><img alt="" height="252" src="https://s40723247.github.io/cad2019/images/33.PNG" width="620"/><br/></span></span><strong><br/>操作影片:<br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/lilDc6Ns-I4" width="560"></iframe><br/></strong></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><br/> <strong>3.6.2 固定器(Sketching of a Holder)<br/><br/></strong></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr" id="tw-target-text"><span lang="zh-TW" tabindex="0"><img alt="" height="324" src="https://s40723247.github.io/cad2019/images/34.PNG" width="506"/></span></pre><h3>Week13</h3>
<p><strong>Webot <span>tutorial </span>1 </strong></p>
<p><b>操作影片:</b></p>
<p><b><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9_wb_nkoGU8" width="560"></iframe></b></p>
<p>1.開啟Webots，創建一個新的世界，並將檔名改為<span>my_first_simulation。<br/>2.更改場地尺寸及牆的高度。<br/>3.加入木箱，並更改木箱尺寸與初始高度。<br/>4.利用ctrl+C.ctrl+V複製出三個箱子，以shift+滑鼠左鍵拖移，完成後存儲。<br/>5.加入一台機器，加入後儲存，再按開始鍵，檢查機器是否作動。<br/>6.進行物理施壓測試，使用Alt+滑鼠左鍵拖移機器。<br/>7.使用Alt+滑鼠左鍵拖移木箱，會發現木箱無法拖移，需給予木箱重量才能拖移。<br/>8.更改效能。<br/>9.創建控制程式，點選python，並命名為e-puck_go_forward。<br/>10.更改程式碼後存儲，進行測試。<br/>11.測試完後，即完成。</span></p>
<p><strong>Webot<span> </span><span>tutorial 2</span></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/6cRF1jS2Fwo" width="560"></iframe><br/>1.開啟tutorial 1的範本，並另存為obstacles.wbt。<br/>2.刪除原先的場地，並新增一個新場地(Floor)，將場地尺寸設定為(1,1)且無牆壁。<br/>3.新增實體節點(Solid)，在children中新增一個形狀節點(Shape)。<br/>4.在形狀幾何(geometry)中新增球形節點(Sphere)。<br/>5.在形狀外觀(appearance)中新增幾何圖形節點(PBRAppearance)，並將當中的屬性(metalness)改為0.粗糙度(roughness)改為1。<br/>6.在實體節點(Solid)中的實體邊界(bounding Object)中新增形狀節點(Shape)。<br/>7.在實體節點(Solid)中的物理性質(physics)中新增物理節點(physics)。<br/>8.將實體節點(Solid)平移到機器前(0,0.2,-0.2)，完成後存儲。<br/>9.將球體更改尺寸及座標(radius為0.05，subdivision為2)。<br/>10.設定各節點名稱已做def use機制設定(geometry def BALL_GEOMETRY).(將boundingObject目錄下清空，並新增USE / BALL_GEOMETRY)(Solid def ball)。<br/>11.以相同方式新增四面牆壁。<br/>12.將各牆壁中的節點命名及設定尺寸.設定位置。<br/>13.完成後存儲，並模擬及操作完畢。</p>
<p></p>
<p><strong>V-rep bubbleRob外型設定<br/></strong></p>
<p><strong>操作影片:<br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gCgnIWXeeCw" width="560"></iframe></strong><strong><br/></strong><br/>1.開啟V-rep，點選新增球體(Menu-add-Primitive shape-Sphere)，並給予球體尺寸(X-size為0.2)<br/>2.點選crtl+space會開始模擬。<br/>3.利用crtl+C.crtl+V複製一樣的球，接著按crtl+space做碰撞測試，會看到兩顆球彈走。<br/>4.再來要將球體新增外觀及功能。<br/>5.點選球體，並點選平移，在Z軸上輸入0.02後，點選平移按鈕，會看到球體上升。<br/>(Sphere-Object/item shift-translation-Z 0.02-Translate selection)<br/>6.點選左邊場景結構中的球體，並改名為bubbleRob。<br/>7.新增感測器在球體上(Menu-add-Proximity sensor- Cone type)<br/>8.點選感測器，並點選旋轉，在Y軸及Z軸上輸入90，點選選轉扭，更改感測器角度。<br/>(Proximity sensor-Object/item rotate-Rotation-Y 90. Z 90.-Rotate selection)<br/>9.點選感測器，並點選平移，在X軸輸入0.1;Z軸輸入0.12,更改感測器位置。<br/>(Proximity sensor-Object/item shift-translation-X 0.1. Z 0.12.-Translate selection)<br/>10.雙擊左邊場景結構中的感測器，並點擊顯示體積參數(Show volume parameter )，將偏移量(Offest)改為0.005，角度(Angle)改為30，範圍(Range)改為0.15。<br/>11.點擊顯示檢測參數(Show detection parameters),並取消不允許檢測之項目(item Don't allow detections)。<br/>12.點選左邊場景結構中的感測器，並改名為bubbleRob_sensingNose。<br/>13.選取球體與感測，並點選編輯中的Make last selected object parent，使球體與感測器結合。<br/>14.再來將球體加上輪子，新增一個尺寸為0.08x0.08x0.02的圓柱，並設定圓柱的位置（0.05,0.1,0.04），完成後將其X軸方向選轉90度。<br/>15.將輪子命名為bubbleRob_leftWheel，並複製一個命名為bubbleRob_rightWheel，將Y軸座標側為-0.1。<br/>16.接著新增馬達(Menu bar-Add-Joint-Revolute)，將馬達位置調至輪子中心，並命名為bubbleRob_leftMotor。<br/>17.雙擊馬達，點選Show dynamics properties dialog，並勾選Motor enabled及Lock motor when target velocity is zero。<br/>18.以相同步驟完成bubbleRob_rightMotor。<br/>19.將馬達固定在輪子上，並將馬達固定在球體上。<br/>20.新增第三支撐點(直徑0.05的球體)，並平移球體X-0.07，完成後命名為bubbleRob_slider。<br/>21.新增傳動器(Menu bar-Add-Force sensor)，並設定位置X -0.07. Z 0.05.，完成後命名為bubbleRob_connection。<br/>22.將傳動器與支撐點連接，並跟主體連接，即完成外型設定。</p>
<p><strong>Webots及Vrep之介紹與使用心得<br/></strong></p>
<p>Webots</p>
<p><strong><a href="http://www.sensorobots.net/wp-content/uploads/2013/08/webot.jpg"><img alt="webot" class="alignright size-full wp-image-952" height="171" src="http://www.sensorobots.net/wp-content/uploads/2013/08/webot.jpg" width="298"/></a></strong></p>
<p>Webots是一款用於移動機器人建模、編程、和仿真的開發環境軟件。在Webots中，用戶可以設計各種複雜的結構，不管是單機器人還是群機器人，相似的或者是不同的機器人都可以很好的交互；也可以對每個對象屬性如形狀、顏色、紋理、質量等進行自主選擇。除了可以在軟件中對每個機器人選擇大量的虛擬傳感器和驅動器，也可以在這種集成的環境或者是第三方的開發環境對機器人的控制器進行編程。機器人的行為完全可以通過現實環境中進行驗證，同時控制器的代碼也可以實現商業化機器人的移植。</p>
<p><strong>Vrep</strong></p>
<p><strong><img alt="[連載0]Vrep入門介紹" class="TitleImage" src="https://pic2.zhimg.com/v2-115fc76be5f99897f64919bdbb6a7ebd_1200x500.jpg"/></strong></p>
<p>Vrep是一款動力學仿真軟件，主要定位於機器人仿真建模領域，可以利用內嵌腳本、ROS節點、遠程API客戶端等實現分佈式的控制結構，是非常理想的機器人仿真建模的工具。控制器可以採用C/C++, Python, Java, Lua, Matlab, Octave or Urbi等語言實現。</p>
<p>使用心得<br/>  我覺得Webots在設定零件及功能設定上來得比Vrep簡單許多，在場景模擬逼真度也比Vrep好，但Vrep在零件編排的結構上比Webots來的詳細，在遠端控制方面也比Webots，兩種各有優缺點，使用方面見仁見智。</p>
<p><strong>Week13報告影片</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Q_6HhBJ4k20" width="560"></iframe></strong></p><h3>Week14</h3>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong>Webots tutorial 3</strong></p>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/_mEsiBU9LPM" width="560"></iframe></strong></p>
<p>1.開啟Webots Tutorial 2的檔案，並另存為appearance.wbt。<br/>2.修改牆壁的外觀，在第一面牆的Appearance中的baseColor改成藍色.metalness改0.roughness改為0.5(若use-der機制有完成設定，其餘3面也會更著變動)。<br/>3.將球體新增紋路，在Appearance的baseColorMap中新增ImageTexture。<br/>4.在ImageTexture的url新增WEBOTS_HOME / projects / default / worlds / textures / red_brick_wall.jpg 路徑下的圖片。<br/>5.可使用View / Wireframe Rendering菜單項以線框模式查看仿真和恢復純渲染模式：View / Plain Rendering。<br/>6.查看坐標系：View / Optional Rendering / Show Coordinates System (Ctrl + F1)。<br/>7.查看距離傳感器的光線：View / Optional Rendering / Show DistanceSensor Rays (Ctrl + F10)。</p>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong>Webots tutorial 4</strong></p>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/GlJ_y--w00A" width="560"></iframe></strong></p>
<p>1.開啟Webots Tutorial 3的檔案，並另存為collision_avoidance.wbt。<br/>2.新增一個控制程式碼檔案，並命名為e-puck_avoid_collision。<br/>3.進行自動迴避程式碼加入。<br/>4.複製程式碼並貼上，存儲後執行，能看到機器自動迴避。</p>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong>Webots tutorial 5</strong></p>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/uM78CW-jbSg" width="560"></iframe></strong></p>
<p>1.開啟Webots Tutorial 4的檔案，並另存為compound_solid.wbt。<br/>2.新增啞鈴，先新增Solid，並def為dumbbell。<br/>3.在physics中新增Physics，接著在children中新增Group，並在Group中的children新增Shape兩個Transform。<br/>4.在Shape中的geometry新增cylinder，並將height改為0.1及radius改為0.01。<br/>5.接著在Transform中的children新增Shape，並在底下的geometry新增Sphere，然後將底下的radius改為0.03。<br/>6.將Transform底下的translation Y軸改為0.05。<br/>7.依相同方式完成另一個Transform，並將translation Y軸改為-0.05。<br/>8.接著使用def-use機制將Group def GO，並將boundimgObject新增use GO。<br/>9.接著調整啞鈴的物理性質，將phusics中的mass改為2及density改為-1.centerOfMass Y軸改為0.01。<br/>10.調整啞鈴位置，將rotation中的數值改為(1,0,0,1.5708)，且translation Y軸改為0.03。<br/>11.接著設定啞鈴的物理屬性，將Worldlnfo中的contactProperties新增ContactProperties，並將底下的coulombFriction改為0。<br/>12.接著將material1和material2改為dumbbell。<br/>13.設定完測試，即完成。</p>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong>Webots tutorial 6</strong></p>
<p class="tw-data-text tw-text-large tw-ta" data-placeholder="翻譯" dir="ltr"><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Z6ASNLCNGLQ" width="560"></iframe></strong></p>
<p>1.開啟Webots Tutorial 5的檔案，將箱子.機器.球.啞鈴刪除後，另存為4_wheels_robot.wbt。<br/>2.新增Robot，並將底下的physics加入Physics。<br/>3.在Robot下的children中新增Shape，並def BODY。<br/>4.將Robot下的boundingObject中新增use BODY。<br/>5.接著將Shape下的geometry新增Box，並將尺寸定為(0.1,0.05,0.2)。<br/>6.接著將Shape下的appearance新增PBRAppearance，並將顏色改為紅色.metalness改為0。<br/>7.在Robot下的children中新增Hingejoint(複製三個)，並在底下的jointParameter中新增HingeJointParameter。<br/>8.接著在Hingejoint中的device新增RotationalMotor，並且在Hingejoint中的endPoint新增Soild。<br/>9.將Soild def WHEEL1，並在底下的children新增Shape，且def WHEEL。<br/>10.在endPoint底下的physics加入Physics，並def WHEEL_PH。<br/>11.接著在Shape下的geometry中新增Cylinder，並在Shape下的appearance新增PBRAppearance。<br/>12.將appearance中的顏色改為綠色.metalness改為0。<br/>13.接著調整軸心位置，將geometry中的radius改為0.04.height改為0.02。<br/>14.將Hingejoint下的boundingObject新增use WHEEL，並將endPoint下的name改為wheel1。<br/>15.調整輪胎位置，將translation中的數值調為(0.06,0,0.05)，並將rotation的數值調為(0,0,1,1.5708)。<br/>16.接著將HingeJointParameter下的anchor中的數值調為(0.06,0,0.05)。<br/>17.將RotationalMotor中的name改為wheel1。<br/>18.接著將其餘三個輪胎的數值改動.名稱改動，並用use-der機制完成。<br/>19.新增感測器，在Robot下的children中新增DistanceSensor,並在DistanceSensor下的children新增Shape。<br/>20.接著在Shape下的geometry新增Box.appearance新增PBRAppearance，並將appearance下的metalness改為0.顏色改為藍色。<br/>21.接著更改大小,將geometry中的size數值改為(0.01,0.01,0.01)。<br/>22.接著更改感測器位置，將DistanceSensor下的translation中的數值改為(0.03,0,0.1)，並且將rotation中的數值改為(0,1,0,0.3)。<br/>23.接著複製感測器，將其translation中的數值改為(-0.03,0,0.1).rotation中的數值改為(0,1,0,-1.8)。<br/>24.將感測器的name改為ds_left及ds_right，並將調整Robot高度為(0,0.05,0)，完成設定後存儲。<br/>25.接著加入程式碼，選擇Python，並命名為4_wheels_collision_avoidance。<br/>26.複製程式碼貼上並存儲，並且將conteoller選用4_wheels_collision_avoidance。<br/>27.接著開始模擬，運作正常及完成。</p><h2>Week15〜Week18</h2>
<p><strong><span color="#808080" style="color: #0000ff;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Week15</span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">個人學習成果影片</span></span></span></strong></p>
<p><strong><span color="#808080"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/N9OyG7pRzQI" width="560"></iframe></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">個人</span></span></span></strong><span style="vertical-align: inherit;"><strong><span color="#808080"><span style="vertical-align: inherit;">心得</span></span><span color="#808080"><span style="vertical-align: inherit;">：</span></span><span color="#808080"><span style="vertical-align: inherit;"><br/></span></span></strong></span><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">在這幾週，我了解很多關於各繪圖軟件的發展及用途。優缺點，在NX的部分，練習很多2D輪廓的佈局，其中包含一些曲線輪廓要如何佈局。幾何特徵如何設定，使我在NX繪圖更加的了解。在模擬程序方面用了Webots.Vrep，從放置零件到參數設置，</span></span><span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">了解到要模擬程序是多麼困難，但在這幾週的例題練習，也讓我了解了兩個一個模擬程式許多。</span></span></span></span></p>
<p><strong><span color="#808080" style="color: #0000ff;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Week16</span></span></span></strong></p>
<p><strong><span class="js-issue-title">越野車零組件設計繪圖查驗</span></strong></p>
<p><strong><span class="js-issue-title"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/g0nJGz4IKWs" width="560"></iframe></span></strong></p>
<p><strong><span class="js-issue-title">個人心得:<br/></span></strong><span class="js-issue-title"><br/>這周任務是做簡化版越野車繪製及轉檔，以之前練習過的solvespace例題用過的各種指令來畫，很快速就完成了，只是在設計連結的部分思考了比較久，因為要思考後面轉檔完，如何將零件分開，讓我在這方面更了解了一些。</span></p>
<p><strong><span color="#808080" style="color: #0000ff;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Week17</span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">越野車工程圖</span></span></span></strong></p>
<p><img alt="" height="943" src="/images/組合.png" width="1000"/></p>
<p><img alt="" height="443" src="/images/組合3.png" width="1000"/></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title">Component1-Body</span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="700" src="/images/本體.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="328" src="/images/本體2.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title">Component2-link</span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="430" src="/images/leg.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="1476" src="/images/leg2.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title">Component3-Wheel</span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="864" src="/images/輪胎.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="1106" src="/images/輪胎2.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title">Component4-Pin1</span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="961" src="/images/銷.png" width="1000"/></span></span></span></span></strong></p>
<p><img caption="false" height="595" src="/images/銷5.png" width="1000"/></p>
<p><strong>Component5-Pin2</strong></p>
<p><strong><img alt="" height="961" src="/images/銷.png" width="1000"/></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="734" src="/images/銷4.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title">Component6-Pin3</span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="961" src="/images/銷.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><img alt="" height="504" src="/images/銷2.png" width="1000"/></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title">越野車阻尼設計</span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/IL_e53Ss7ao" width="560"></iframe></span></span></span></span></strong></p>
<p><strong><span color="#808080"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span class="js-issue-title">個人心得:<br/></span></span></span></span></strong>這幾周從越野車的設計到最後的設定過程非常繁雜，一開始要想如何設計越野車轉檔過去才不會出錯，設計完成後還要想如何組合，到最後還要設定阻尼.摩擦力.....等參數，才能讓越野車正常運，需要耗很多時間去研究才能完成。</p>
<p>Webots Tutorial 2 翻譯內容</p>
<p><strong>A New Simulation<br/></strong><strong>新的模擬</strong></p>
<p><strong>Hands-on #1</strong><span>: Make sure the<span> </span></span><code>my_first_simulation.wbt</code><span><span> </span>world file is open, and that the simulation is paused and is at a virtual time of 0. Using the<span> </span></span><code>File / Save World As...</code><span><span> </span>menu, save the simulation as<span> </span></span><code>obstacles.wbt</code><span>.<br/></span><span><strong><span>操作1:</span></strong>將<code>my_first_simulation.wbt</code><span><span>文件打開，並且將模擬暫停。使用</span></span><code>File / Save World As...</code><span><span>，將模擬另存為</span></span><code>obstacles.wbt</code><span><span>。</span></span></span></p>
<p><strong>Modifying the Floor<br/></strong><strong>修改場地</strong></p>
<p><strong>Hands-on #2<span>:</span></strong> To remove the <code>RectangleArena</code>, select it either in the 3D view or in the scene tree view with a left click and press the <code>Delete</code> key on your keyboard. Alternatively, you can right click on it in the 3D view and select <code>Delete</code> in the context menu (you can also use the context menu directly in the scene tree view). Select the <code>TexturedBackroundLight</code> node and click on the <code>Add</code> button. In the open dialog box, and choose <code>PROTO nodes (Webots Projects) / objects / floors / Floor (Solid)</code>.<br/><strong><span><span>操作2</span><span><span>：</span></span></span></strong>刪除原先的場地，並新增一個新場地(Floor)。</p>
<p><strong>Hands-on #3</strong><span>: In the scene tree view select and expand the<span> </span></span><code>Floor</code><span>. Modify the<span> </span></span><code>size</code><span><span> </span>field and set it to<span> </span></span><code>{1, 1}</code><span><span> </span>to resize it to 1mx1m.<br/></span><strong>操作3:</strong>場地尺寸設定為(1,1)且無牆壁。</p>
<p><strong>The Solid Node<br/></strong><strong>實體節點</strong></p>
<p><strong><img alt="" height="308" src="/images/未命名.png" width="380"/></strong></p>
<p>A<span> </span>Solid<span> </span>node represents a<strong> </strong>rigid body, that is a body in which deformation can be neglected. The distance between any two given points of a rigid body remains constant in time regardless of external forces exerted on it. For example a table, a robot finger phalanx or a wheel are rigid bodies. Soft bodies and articulated objects are not rigid bodies. For example, a rope, a tire, a sponge or an articulated robot arm are not rigid bodies. However, an articulated entity can be broken into several rigid bodies.</p>
<p>The physics engine of Webots is designed for simulating rigid bodies only. An important step, when designing a simulation, is to break up the various entities into separate rigid bodies.</p>
<p>To define a rigid body, you will have to create a<span> </span>Solid<span> </span>node. Inside this node you will set up different sub-nodes corresponding to the characteristics of the rigid body. The following<span> </span>figure<span> </span>depicts a rigid body and its sub-nodes. The graphical representation of the<span> </span>Solid<span> </span>node is defined by the<span> </span>Shape<span> </span>nodes populating its<span> </span><code>children</code><span> </span>list. The collision bounds are defined in its<span> </span><code>boundingObject</code><span> </span>field. The graphical representation and the collision shape are often but not necessarily identical. Finally, the<span> </span><code>physics</code><span> </span>field defines if the object belongs to the dynamical or to the static environment. All these sub-nodes are optional, but the<span> </span><code>physics</code><span> </span>field needs the<span> </span><code>boundingObject</code><span> </span>to be defined.</p>
<p><span>實體節點代表一個</span>剛體<span>，即在其中變形可以忽略不計的主體。剛體上任意兩個給定點之間的距離在時間上保持恆定，而不管施加在其上的外力如何。例如，桌子，機械手指骨或輪子是剛體。軟體和關節物體不是剛體。例如，繩索，輪胎，海綿或關節式機械臂不是剛性體。但是，可以將一個鉸接的實體分解為幾個剛體。</span></p>
<p><span><span>Webots的物理引擎僅設計用於模擬剛體。</span><span>設計仿真時，重要的一步是將各個實體分解為單獨的剛體。</span></span></p>
<p><span><span>要定義剛體，必須創建一個實體</span></span><span><span>節點。</span><span>在此節點內，將根據剛體的特性設置不同的子節點。</span><span>下</span></span><a class="dynamicAnchor" href="https://cyberbotics.com/doc/guide/tutorial-2-modification-of-the-environment#the-simplest-model-of-a-rigid-body-in-webots-having-a-graphical-representation-a-physical-bounding-object-and-being-in-the-dynamical-environment"><span><span>圖</span></span></a><span><span>描繪了剛體及其子節點。</span></span><span><span>實體</span></span><span><span>節點</span><span>的圖形表示</span><span>由</span><span>填充其</span><span>列表</span><span>的形狀</span></span><span><span>節點</span><span>定義</span></span><code>children</code><span><span>。</span><span>碰撞範圍在其</span></span><code>boundingObject</code><span><span>字段</span><span>中定義</span><span>。</span><span>圖形表示和碰撞形狀相似</span></span><span><span>但不一定相同。</span><span>最後，該</span></span><code>physics</code><span><span>字段定義對像是屬於動態環境還是屬於靜態環境。</span><span>所有這些子節點都是可選的，但是</span></span><code>physics</code><span><span>需要</span></span><code>boundingObject</code><span><span>定義</span><span>該</span><span>字段</span><span>。</span></span></p>
<p><strong>Create a Ball<br/>創建一顆球</strong></p>
<p><strong>Hands-on #4</strong>: In the scene tree view, select the last node and press the<span> </span><code>Add</code><span> </span>button. In the dialog, open the<span> </span><code>Bases nodes</code><span> </span>section and select the<span> </span>Solid<span> </span>node. In the scene tree view, expand the<span> </span>Solid<span> </span>node and select its<span> </span><code>children</code><span> </span>field. Add a<span> </span>Sh<a href="https://cyberbotics.com/doc/reference/shape">ape</a><span> </span>node to it by using the<span> </span><code>Add</code><span> </span>button. Select the<span> </span><code>appearance</code><span> </span>field of the<span> </span>Shape<span> </span>node and use the<span> </span><code>Add</code><span> </span>button to add a<span> </span><code>PBRAppearance</code><span> </span>node.</p>
<ol>
<li>Add a<span> </span>Sphere<span> </span>node as the<span> </span><code>geometry</code><span> </span>field of the newly created<span> </span>Shape<span> </span>node.</li>
<li>Expand the<span> </span><code>PBRAppearance</code><span> </span>node and change its<span> </span><code>metalness</code><span> </span>field to 0 and its<span> </span><code>roughness</code><span> </span>field to 1.</li>
<li>Add another<span> </span>Sphere<span> </span>node to the<span> </span><code>boundingObject</code><span> </span>field of the<span> </span>Solid.</li>
<li>Finally add a<span> </span>Physics<span> </span>node to the<span> </span><code>physics</code><span> </span>field of the<span> </span>Solid.</li>
<li>By modifying the<span> </span><code>translation</code><span> </span>field of the<span> </span>Solid<span> </span>node, place the ball in front of the robot (at<span> </span><code>{0, 0.2, -0.2}</code><span> </span>for example).</li>
<li>Save the simulation.</li>
<li>The result is depicted in<span> </span>this figure.</li>
</ol>
<p><img alt="tutorial_def_use.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/tutorial_def_use.thumbnail.jpg"/></p>
<p><strong><span><img alt="" height="269" src="/images/未命名1.png" width="397"/></span></strong></p>
<p><strong><span>操作4</span></strong><span>：在場景結構中，選擇最後一個節點，然後按</span><code>Add</code><span>按鈕。在對話框中，打開該</span><code>Bases nodes</code><span>部分，然後選擇<span> </span></span><span>實體</span><span>節點。在場景樹視圖中，展開</span><span>實體</span><span>節點並選擇其</span><code>children</code><span>字段，將其添加一個</span><span>形狀</span><span>節點</span><span>。選擇形狀節點的</span><code>外觀</code><span>字段，然後添加一個節點</span>PBR外觀。<span></span></p>
<ol>
<li><span><span>將</span></span><span><span>球體</span></span><span><span>節點</span><span>添加</span><span>為</span></span><code>geometry</code><span><span>新創建的</span></span><span><span>形狀</span></span><span><span>節點</span><span>的</span><span>字段</span><span>。</span></span></li>
<li><span><span>展開</span></span><code>PBRAppearance</code><span><span>節點並將其</span></span><code>metalness</code><span><span>字段</span><span>更改</span><span>為0，並將其</span></span><code>roughness</code><span><span>字段更改為1。</span></span></li>
<li><span><span>將另一個</span></span><span><span>球體</span></span><span><span>節點</span><span>添加</span><span>到實體節點</span><span>的</span></span><code>boundingObject</code><span><span>字段</span><span>。</span></span><a href="https://cyberbotics.com/doc/reference/solid"><span></span></a><span></span></li>
<li><span><span>最後，將一個</span></span><span><span>物理性質</span></span><span><span>節點</span><span>添加</span><span>到實體節點</span><span>的</span></span><code>physics</code><span><span>字段中</span><span>。</span></span><a href="https://cyberbotics.com/doc/reference/solid"><span></span></a><span></span></li>
<li><span><span>通過修改</span><span>實體</span><span>節點</span><span>的</span></span><code>translation</code><span><span>字段，</span><span>將球放在機器人的前面（</span><span>例如）。<br/></span></span><a href="https://cyberbotics.com/doc/reference/solid"><span></span></a><span></span><code>{0, 0.2, -0.2}</code><span></span></li>
<li><span><span>保存模擬。</span></span></li>
<li><span><span>結果如圖</span></span><span><span>所示</span></span><span><span>。</span></span></li>
</ol>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">When the simulation is started, the ball hits the floor. You can move the ball by applying<a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-3d-window#applying-a-force-to-a-solid-object-with-physics"> a f</a>orce to it (Ctrl + Alt + left-click + drag). The contact points between the ball and the floor can be displayed as cyan lines by enabling the <code>View / Optional Rendering / Show Contact Points</code> menu item.<br/><span>當模擬開始時，球擊中地板。可以透過向球</span><span><span>施加力</span></span><span><span>來</span><span>移動球</span><span>（Ctrl + Alt +左鍵單擊+拖動）。</span><span>通過啟用</span></span><code>View / Optional Rendering / Show Contact Points</code><span><span>菜單項，</span><span>可以將球和地板之間的接觸點顯示為青色線</span><span>。</span></span><br/></span></span></p>
<p><strong>Geometries<br/>幾何形狀</strong></p>
<p><strong>Hands-on #5<span>: </span></strong>For each Sphere node defining the ball, set its <code>radius</code> field to <code>0.05</code> and its <code>subdivision</code> field to <code>2</code>. Refer to the Reference Manual to understand what the <code>subdivision</code> field stands for.<br/><strong><span>操作5</span></strong><span><span>：對於每一個</span></span><span><span>球體</span></span><span><span>限定球節點，其設置</span></span><code>radius</code><span><span>於場</span></span><code>0.05</code><span><span>和它的</span></span><code>subdivision</code><span><span>字段</span></span><code>2</code><span><span>。</span></span></p>
<p><strong>DEF-USE Mechanism<br/></strong><strong>定義使用機制</strong></p>
<p>The<strong> </strong>DEF-USE mechanism<span> </span>allows to define a node in one place and to reuse that definition elsewhere in the scene tree. This is useful to avoid the duplication of identical nodes in world files. Moreover, it also allows users to modify several objects at the same time. Here is how it works: first a node is labeled with a DEF string. Then copies of this node can be reused elsewhere with the USE keyword. Only the fields of the DEF node can be edited, the fields of the USE inherit from the DEF node and cannot be changed. This mechanism is dependent on the order of the nodes in the world file. A DEF node should be defined before any corresponding USE node.</p>
<p>The two<span> </span>Sphere<span> </span>definitions that we have used earlier to define the ball, are redundant. We will now merge these two<span> </span>Spheres<span> </span>into only once using the DEF-USE mechanism.</p>
<p>DEF-USE機制<span>允許在一個地方定義一個節點，並在場景結構的其他地方重複使用的定義。這對於避免在世界文件中復制相同節點很有用。此外，它還允許用戶同時修改多個對象。操作：首先用DEF字符串標記節點，然後使用USE關鍵字將該節點的副本重用於其他地方。只能編輯DEF節點的字段，USE字段的DEF節點並且不能更改。該機制取決於world文件中節點的順序。應在任何相應的USE節點之前定義DEF節點。</span></p>
<p><span><span>之前用來定義</span><span>兩個球體</span></span><span><span>是多餘的。</span><span>將</span><span>使用DEF-USE機制</span><span>將這兩個</span></span><span><span>Sphere</span></span><span><span>合併</span><span>為一次。</span></span></p>
<p><strong>Hands-on #6</strong>: Select the first<span> </span>Sphere<span> </span>node (the child of the<span> </span>Shape) in the scene tree view. The<span> </span>field editor<span> </span>of the scene tree view allows you to enter the DEF string.</p>
<ol>
<li>Enter<span> </span><code>BALL_GEOMETRY</code><span> </span>in this field.</li>
<li>Select the<span> </span><code>boundingObject</code><span> </span>field (containing the second<span> </span>Sphere<span> </span>node), and empty it by right clicking the field in the scene tree and choosing the<span> </span><code>Delete</code><span> </span>entry in the context menu that pops up.</li>
<li>Then, select the<span> </span><code>boundingObject</code><span> </span>field and click on the<span> </span><code>Add</code><span> </span>button, and select the<span> </span><code>USE / BALL_GEOMETRY</code><span> </span>in the dialog box.</li>
<li>The result is shown in<span> </span>this figure.</li>
</ol>
<p><strong><span>操作6</span></strong><span>：在場景結構中選擇第一個球體</span><span>節點</span><span>。場景結構的</span><span>字段編輯器</span><span>輸入DEF字符串。</span></p>
<ol>
<li><span></span><code>BALL_GEOMETRY</code><span><span>在此字段中</span><span>輸入</span><span>。</span></span></li>
<li><span><span>選擇</span></span><code>boundingObject</code><span><span>字段（包含第二個球體</span></span><span><span>節點），然後透過右鍵點擊場景結構中的字段並</span></span><code>Delete</code><span><span>在彈出的上下文菜單中</span><span>選擇</span><span>條目</span><span>來將其清空</span><span>。</span></span></li>
<li><span><span>然後選擇</span></span><code>boundingObject</code><span><span>字段並點擊</span></span><code>Add</code><span><span>，然後</span></span><code>USE / BALL_GEOMETRY</code><span><span>在對話框中</span><span>選擇</span><span>。</span></span></li>
<li><span><span>結果如圖</span></span><span><span>所示</span></span><span><span>。</span></span></li>
</ol>
<p><strong><span color="#808080" style="color: #0000ff;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><img alt="tutorial_def_use.png" src="https://raw.githubusercontent.com/cyberbotics/webots/master/docs/guide/images/tutorial_def_use.thumbnail.jpg"/></span></span></span></strong></p>
<p><strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Hands-on #7<span>: </span></span></span></strong><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Create a second ball with the same parameters but using the</span></span><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"> Shape node (rather than the Sphere node directly) for the DEF-USE mechanism.<br/><strong><span>操作7</span></strong><span><span>：創建第二個球，使用相同的參數，但使用形狀</span></span><span><span>節點（而不是</span><span>直接使用球體</span></span><span><span>節點）作為DEF-USE機制。</span></span><br/></span></span></p>
<p><strong>Add Walls<br/></strong><strong>添加牆</strong></p>
<p><strong>Hands-on #8<span>:</span></strong> Add four walls without physics and using only one definition of the Shape node.<br/><strong><span>操作8</span></strong><span><span>：添加四面牆，而不添加物理場，並且僅使用形狀</span></span><span><span>節點的</span><span>一個定義</span><span>。</span></span></p>
<p><strong>操作影片:<br/><br/><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/6cRF1jS2Fwo" width="560"></iframe><br/></strong></p>
<p><strong><span color="#808080" style="color: #0000ff;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">Week18</span></span></span></strong></p><h1>Note</h1>
<p><span style="color: #0000ff;"><strong>Solvespace功能表說明</strong></span></p>
<p><strong>Sketch 草圖</strong></p>
<p><strong><img alt="" height="307" src="/images/草圖.png" width="524"/></strong></p>
<p><strong><span>Constrain 約束</span></strong></p>
<p><img alt="" height="330" src="/images/約束.png" width="524"/></p>
<p><strong><span>New Group 組成</span></strong></p>
<p><strong><span><img alt="" height="223" src="/images/123.png" width="517"/></span></strong></p>
<p><strong><span>View 視角</span></strong></p>
<p><strong><span><img alt="" height="86" src="/images/視角.png" width="513"/></span></strong></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"> </span></span></span></span></span></span></p>