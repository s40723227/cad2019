<h1><span style="color: #999999;">Progress of the weekly course</span></h1>
<h2><span style="color: #808080;"><strong>Week1~Week5</strong></span></h2>
<p><strong><span style="color: #0000ff;">Week1   </span> </strong>                                                                                                                                                                         </p>
<p><strong>中秋連假</strong></p>
<p><strong><span style="color: #0000ff;">Week2</span></strong></p>
<p><strong>建立個人倉儲cad2019及進行網站編譯</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kWgV0TXOp9c" width="560"></iframe></p>
<p>1.下載<span style="color: #0000ff;"><a href="https://drive.google.com/file/d/1fxMdqdCoCL__O1IpZ-Sv-A_4-c77Wx4E/view?usp=sharing" style="color: #0000ff;">2019Fall可攜套件.7z</a></span><span><span style="color: #0000ff;"> </span>(編譯  Solvespace 用)，完成後開啟。<br/> 2.登入個人github帳號，創建新的倉儲cad2019。<br/></span><span>3.進入要存放資料夾tmp。<br/></span><span>4.輸入</span><span>git clone  <span>https://github.com/s40723227/cad2019<span> 複製</span></span>個人倉儲至資料夾<span>。<br/>5.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。 <br/>6.將up_dir的所有項目複製到cad2019。<br/>7.完成後，進入cmsimde，輸入python -m pip install flask_cors 更改模組。<br/>8.完成後，python wsgi.py 開始編輯倉儲(login密碼為<span style="color: #ff0000;">admin</span>)。<br/>9.編輯完成後，git status<span style="color: #ff0000;"> -&gt;</span> git add .<span style="color: #ff0000;"> -&gt;</span> git commit -m "XXX"<span style="color: #ff0000;"> -&gt;</span> git push。                                </span></span></p>
<p><strong><span style="color: #0000ff;">Week3</span></strong></p>
<p><strong>根據<span style="color: #0000ff;"><a href="http://mde.tw/cad2019/content/Solvespace.html" style="color: #0000ff;">Solvespac</a></span><span style="color: #0000ff;"><a href="http://mde.tw/cad2019/content/Solvespace.html" style="color: #0000ff;">e</a></span>編譯引導，進行編譯後並啟動solvespcae</strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/DXreqVCgsOE" width="560"></iframe></p>
<p>編譯步驟</p>
<p>1.  <span>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe。<br/>2.git version 查驗 git 版本(檢查版本是否為git 2.13 版本以上)。<br/>3.輸入git clone <span>--recurse-submodules 取得所有子模組資料。<br/>               git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace。<br/>4.編譯Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714<br/>                  line713:<span style="color: #ff0000;">#</span>list(APPEND ANGLE_DEFINITIONS<br/>                  line714:<span style="color: #ff0000;">#</span>"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/><span>endif()<br/>5.手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中 。 <br/>6.cd solvespace<span style="color: #ff0000;">-&gt;</span>cd extlib<span style="color: #ff0000;">-&gt;</span>cd libpng<span style="color: #ff0000;">-&gt;</span>mkdir build<span style="color: #ff0000;">-&gt;</span>cd build<span style="color: #ff0000;">-&gt;</span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<span style="color: #ff0000;">-&gt;</span>mingw32-make<span color="#ff0000" style="color: #ff0000;">。<br/></span></span></span></span><span><span><span>7.重新命名libpng.dll.a為libpng_static.a 並複製到Y:\msys64\mingw64\lib目錄下。<br/>8.回到solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 輸入cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<span style="color: #ff0000;">-&gt;<span style="color: #808080;">mingw32-make。<br/>9.開啟solvespcae即完成程式編譯。</span></span></span></span></span></p>
<p><strong><span style="color: #0000ff;"> Week4</span></strong></p>
<p><strong><span style="color: #ff0000;"><span style="color: #808080;">進行網站更新及拍攝操作影片(上字幕.加浮水印)</span></span></strong></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;">1.使用的錄影軟體 <span style="color: #ff0000;">ShareX</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"><span style="color: #ff0000;"><img alt="" height="159" src="/images/shareX.jpg" width="318"/></span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;">2.使用的剪輯軟體(上字幕.加浮水印) <span style="color: #ff0000;">Arctime</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"><img alt="" height="200" src="/images/arctime.jpg" width="200"/></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;">3.課程浮水印 <span style="color: #ff0000;">KMOL</span></span></span></span></span></span></span></p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"><span style="color: #ff0000;"><img alt="" height="200" src="/images/未命名.jpg" width="310"/></span></span></span></span></span></span></span></p>
<p><strong><span style="color: #0000ff;">Week5</span></strong></p>
<p><span style="color: #808080;"><strong>學員互評及自評，solvespcae基本圖面繪製及組裝</strong></span></p>
<p><span style="color: #808080;"><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/yu_RtZgb-F8" width="560"></iframe></strong></span></p>
<p><span style="color: #808080;">步驟一(支架):<br/>開啟圖檔，使用快捷鍵R畫出矩形-&gt;點選兩線段，使用快捷鍵Q使兩線段等長-&gt;使用快捷鍵D定義線段長度-&gt;使用快捷鍵shift+X擠出-&gt;點選two-siderider雙面擠出-&gt;使用快捷鍵D定義擠出長度-&gt;即完成</span></p>
<p><span style="color: #808080;">步驟二(桌腳):<br/>方法與步驟一相同，只有擠出長度不同。</span></p>
<p><span style="color: #808080;">步驟三(支架與桌腳組合):<br/>開啟圖檔，使用快捷鍵shift+I叫出支架及桌腳的圖檔-&gt;點選桌腳的座標系X與系統的座標系Y，再使用快捷鍵X使兩座標系同方向-&gt;點選兩接合點使用快捷鍵O使兩點接合-&gt;以相同方法完成整體支架。<br/></span></p>
<p><span style="color: #808080;">步驟四(桌面):<br/>方法與步驟一相同，只有矩形尺寸及擠出長度不同。</span></p>
<p><span style="color: #808080;">步驟五(整體支架與桌面組合):<br/>方法與步驟三相同。</span></p>
<p><span style="color: #808080;">備註:零件圖檔更改尺寸及顏色，組合圖也會更著改變。</span></p>
<p><span style="color: #808080;"></span></p>
<p><strong><span style="color: #808080;">成品圖</span></strong></p>
<p><img alt="" height="352" src="/images/solvespace_20190826_22e4011c_2019-10-11_15-55-57.png" width="533"/></p>
<h2><span style="color: #808080;">Week6~Week7</span></h2>
<p><strong><span style="color: #0000ff;">Week6</span></strong></p>
<p><strong><span style="color: #808080;">1.機械設計工程系-電腦輔助設計實習  W6 任務一參數化零組件繪製</span></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/PLqjwFvD8Cg" width="560"></iframe></p>
<p><strong><span style="color: #808080;">成品圖</span></strong></p>
<p><strong><span style="color: #808080;"><img alt="" height="387" src="/images/車.png" width="500"/></span></strong></p>
<p><strong><span style="color: #808080;">2.<span>機械設計工程系-電腦輔助設計實習 W6 任務一網際 V-rep 模型控制</span></span></strong></p>
<p><span style="color: #808080;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NVT7xssxKok" width="560"></iframe></span></p>
<p><span style="color: #808080;">(1)下載</span><span style="color: #808080;"> </span><a href="https://drive.google.com/file/d/1cZFSsLEoGOBYojzKzFEf4YH2l--pbS-9/view?usp=sharing">V-rep 3.6.1 rev 4.7z</a><span style="color: #808080;"> 及<a href="https://github.com/mdecourse/mocad/files/3583773/web_vrep2.zip">web_vrep2.zip</a> (<a href="http://mde.tw/cad2019/downloads/web_vrep2.zip">local</a>)並解壓縮到隨身系統裡<br/></span><span style="color: #808080;"><span><span>(2)打開vrep.exe並開啟web_vrep2裡的two_wheeler.ttt<br/>(3)打開web_vrep2裡的app.py並執行，進入到http://127.0.0.1:5000/<br/>(4)按開始之後，就可以控制車了</span></span></span></p>
<p><strong><span style="color: #808080;"><span>3.機械設計工程系-電腦輔助設計實習 W6 任務一新增啟動與停止按鈕</span></span></strong></p>
<h1>Solvespace功能表說明</h1>
<p><strong>Sketch 草圖</strong></p>
<p><strong><img alt="" height="307" src="/images/草圖.png" width="524"/></strong></p>
<p><strong><span>Constrain 約束</span></strong></p>
<p><img alt="" height="330" src="/images/約束.png" width="524"/></p>
<p><strong><span>New Group 組成</span></strong></p>
<p><strong><span><img alt="" height="223" src="/images/123.png" width="517"/></span></strong></p>
<p><strong><span>View 視角</span></strong></p>
<p><strong><span><img alt="" height="86" src="/images/視角.png" width="513"/></span></strong></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules<span> </span><a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<p><span><span><span><span><span style="color: #ff0000;"><span style="color: #808080;"> </span></span></span></span></span></span></p>